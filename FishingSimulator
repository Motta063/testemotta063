warn("Anti afk running")
game:GetService("Players").LocalPlayer.Idled:connect(function()
    warn("Anti afk ran")
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

local function getrarity(value)
    local rarity = nil
    for i, v in pairs(require(game:GetService("ReplicatedStorage").CloudFrameShared.Rodux.Reducer.gameValues.rarity)) do
        if type(v) == "table" and v.displayName == value then
            rarity = v.id
        end
    end
    return rarity
end

local function getSize(value)
    local size = nil
    for i, v in pairs(require(game:GetService("ReplicatedStorage").CloudFrameShared.Rodux.Reducer.gameValues.fishSizes)) do
        if type(v) == "table" and v.displayName == value then
            size = v.id
        end
    end
    return size
end

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2", true))()

local example = library:CreateWindow({
    text = "Fishing Simulator"
})

-- Função de Auto Fish
example:AddToggle("Auto Fish", function(state)
    getfenv().fish = (state and true or false)
    while getfenv().fish do
        task.wait()
        local chr = game.Players.LocalPlayer.Character
        if not chr:FindFirstChildOfClass("Tool") or chr:FindFirstChildOfClass("Tool") and chr:FindFirstChildOfClass("Tool"):GetAttribute("type") ~= "Rods" then
            local plr = game.Players.LocalPlayer.UserId
            for i, v in pairs(game:GetService("ReplicatedStorage").ToolsCache[plr]:GetChildren()) do
                if v:GetAttribute("type") == "Rods" then
                    rod = v
                end
            end
            game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("EquipTool"):FireServer(rod)
        end
        game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("CastFishingLine"):FireServer()
        task.wait(1)
        task.spawn(function()
            game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("FishBiting"):InvokeServer()
        end)
        task.wait(2.1)
        game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("FishCaught"):FireServer()
    end
end)

-- Função de Auto Coletar Baús
example:AddToggle("Auto Collect Chests", function(state)
    getfenv().chests = (state and true or false)
    while getfenv().chests do
        task.wait()
        pcall(function()
            for i, v in pairs(workspace:GetDescendants()) do
                if v.ClassName == "ProximityPrompt" and v.Parent.Name == "HumanoidRootPart" and not v.Parent.Parent:GetAttribute("OpenParticlesType") and v.Enabled and v.ActionText == "Open" and getfenv().chests then
                    repeat
                        task.wait()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Parent.CFrame
                        fireproximityprompt(v)
                    until v.Enabled == false or getfenv().chests == false
                end
            end
        end)
    end
end)

-- Função de Auto Farm Mobs
example:AddToggle("Auto Farm Mobs", function(state)
    _G.test = (state and true or false)
    while _G.test do
        task.wait()
        pcall(function()
            local plr = game.Players.LocalPlayer.UserId
            for i, v in pairs(game:GetService("ReplicatedStorage").ToolsCache[plr]:GetChildren()) do
                if v:GetAttribute("type") == "Spears" then
                    spear = v.Name
                end
            end
            for i, v in pairs(workspace:GetChildren()) do
                if v.ClassName == "Model" and v:FindFirstChild("Hitbox") and _G.test then
                    repeat
                        wait()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.PrimaryPart.CFrame * CFrame.new(0, 0, 20)
                        game:GetService("ReplicatedStorage").CloudFrameShared.DataStreams.SpearThrown:FireServer(spear, v.PrimaryPart.CFrame, v.PrimaryPart.Position, tonumber("1696341607.0" .. math.random(100000, 1000000)))
                        game:GetService("ReplicatedStorage").CloudFrameShared.DataStreams.MonsterHit:FireServer(v, spear, true)
                        task.wait(2)
                    until v.Health.Value == 0 or _G.test == false or v.Parent == nil
                end
            end
        end)
    end
end)

-- Outras funcionalidades
