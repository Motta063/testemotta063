warn("Anti afk running")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   warn("Anti afk ran")
   game:GetService("VirtualUser"):CaptureController()
   game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

-- Função para verificar a raridade do peixe
local function getrarity(value)
   local rarity = nil
   for i,v in pairs(require(game:GetService("ReplicatedStorage").CloudFrameShared.Rodux.Reducer.gameValues.rarity)) do
      if type(v) == "table" and v.displayName == value then
         rarity = v.id
      end
   end
   return rarity
end

-- Aqui você define quais raridades você quer capturar
local raridadesPermitidas = {"Legendary", "Epic"}  -- Defina as raridades que você quer capturar

-- Função para verificar se o peixe capturado é raro
local function isRareFish(fishRarity)
   for _, rarity in pairs(raridadesPermitidas) do
      if fishRarity == rarity then
         return true
      end
   end
   return false
end

-- Biblioteca de interface do usuário
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2", true))()
local example = library:CreateWindow({ text = "Fishing Simulator" })

-- Auto Fish com filtro de raridade
example:AddToggle("Auto Fish", function(state)
   getfenv().fish = (state and true or false)
   while getfenv().fish do
      task.wait()
      local chr = game.Players.LocalPlayer.Character
      
      -- Equipar vara de pesca se não estiver equipada
      if not chr:FindFirstChildOfClass("Tool") or chr:FindFirstChildOfClass("Tool") and chr:FindFirstChildOfClass("Tool"):GetAttribute("type") ~= "Rods" then
         local plr = game.Players.LocalPlayer.UserId
         for i,v in pairs(game:GetService("ReplicatedStorage").ToolsCache[plr]:GetChildren()) do
            if v:GetAttribute("type") == "Rods" then
               rod = v
            end
         end
         game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("EquipTool"):FireServer(rod)
      end
      
      -- Lançar linha de pesca
      game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("CastFishingLine"):FireServer()
      task.wait(1)
      
      -- Verificar se o peixe é raro
      task.spawn(function()
         local fishRarity = getrarity("FishName")  -- Substitua "FishName" pelo nome correto do peixe que você está verificando
         if isRareFish(fishRarity) then
            game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("FishBiting"):InvokeServer()
         else
            print("Peixe não é raro, ignorando captura.")
         end
      end)
      
      -- Capturar o peixe se for raro
      task.wait(2.1)
      if isRareFish(getrarity("FishName")) then
         game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("FishCaught"):FireServer()
      end
   end
end)
