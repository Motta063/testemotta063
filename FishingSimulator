warn("Anti afk running")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   warn("Anti afk ran")
   game:GetService("VirtualUser"):CaptureController()
   game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

local function getrarity(value)
   local rarity = nil
   for i,v in pairs(require(game:GetService("ReplicatedStorage").CloudFrameShared.Rodux.Reducer.gameValues.rarity)) do
      if type(v) == "table" and v.displayName == value then
         rarity = v.id
      end
   end
   return rarity
end

local function getSize(value)
   local size = nil
   for i,v in pairs(require(game:GetService("ReplicatedStorage").CloudFrameShared.Rodux.Reducer.gameValues.fishSizes)) do
      if type(v) == "table" and v.displayName == value then
         size = v.id
      end
   end
   return size
end

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2", true))()

local example = library:CreateWindow({
   text = "Fishing Simulator"
})

example:AddToggle("Auto Fish", function(state)
   getfenv().fish = (state and true or false)
   while getfenv().fish do
      task.wait()
      local chr = game.Players.LocalPlayer.Character
      
      -- Verifica se a vara de pesca está equipada, se não, equipa automaticamente
      if not chr:FindFirstChildOfClass("Tool") or chr:FindFirstChildOfClass("Tool") and chr:FindFirstChildOfClass("Tool"):GetAttribute("type") ~= "Rods" then
         local plr = game.Players.LocalPlayer.UserId
         for i,v in pairs(game:GetService("ReplicatedStorage").ToolsCache[plr]:GetChildren()) do
            if v:GetAttribute("type") == "Rods" then
               rod = v
            end
         end
         game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("EquipTool"):FireServer(rod)
      end
      
      -- Lança a linha de pesca
      game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("CastFishingLine"):FireServer()
      task.wait(1) -- Espera antes de pegar o peixe
      
      -- Peixe morde a isca
      task.spawn(function()
         game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("FishBiting"):InvokeServer()
      end)
      
      -- Espera para capturar o peixe
      task.wait(2.1)
      
      -- Captura o peixe automaticamente
      game:GetService("ReplicatedStorage"):WaitForChild("CloudFrameShared"):WaitForChild("DataStreams"):WaitForChild("FishCaught"):FireServer()
   end
end)

-- Outras funcionalidades, como coleta de baús, mobs, etc, permanecem as mesmas.
example:AddToggle("Auto Collect Chests", function(state)
   getfenv().chests = (state and true or false)
   while getfenv().chests do
      task.wait()
      pcall(function()
         for i,v in pairs(workspace:GetDescendants()) do
            if v.ClassName == "ProximityPrompt" and v.Parent.Name == "HumanoidRootPart" and not v.Parent.Parent:GetAttribute("OpenParticlesType") and v.Enabled and v.ActionText == "Open" and getfenv().chests then
               repeat task.wait()
                  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Parent.CFrame
                  fireproximityprompt(v)
               until v.Enabled == false or getfenv().chests == false
            end
         end
      end)
   end
end)
